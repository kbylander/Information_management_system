list <- append(list, result[1]*1)
list <- append(list, result[1]*2)
list
output <- "C:/MAMP/htdocs/IMS-Daredevil/Algorithms/output/output.php"
output
output
read(output)
read.csv(output)
test <- read.csv(output)
test
test <- append(test, result)
test
test[0]
test[1]
result <- Genpofad(fasta1, fasta2)
result <- result[1]
result
sink("output/output.php", append = TRUE)
result <- Genpofad(fasta1, fasta2)
result <- result[1]
sink()
sink("output/output.php", append = TRUE)
result <- Genpofad(fasta1, fasta2)
result <- result[1]
sink()
sink("output/output.php", append = TRUE)
result <- Genpofad(fasta1, fasta2)
result
sink()
sink("output/output.php", append = TRUE)
result <- Genpofad(fasta1, fasta2)
result
sink()
output <- "C:/MAMP/htdocs/IMS-Daredevil/Algorithms/output/output.php"
output
read.csv(output)
read.csv(output)[1]
read.csv(output)[0]
output <- "C:/MAMP/htdocs/IMS-Daredevil/Algorithms/output/output.php"
output[1]
output[2]
output[0]
output["test2"]
output[1]
output <- read.csv(output)
output
output[1]
output[1,1]
output[1,2]
output[2,1]
output[0,1]
output[0]
output[0,1]
output[1,1]
output[2,1]
output[3,1]
result
result[1]
result[2]
result[0]
result[1]
result["test2"]
sink("output/output.php", append = TRUE)
result <- Genpofad(fasta1, fasta2)
result <- result[1]
result
sink()
sink("output/output.php", append = TRUE)
result <- result[1]*2
result
sink()
fasta1
fastaFile1 <- readDNAStringSet(fasta2)
seq_name1 = names(fastaFile1)
seq_name1
sink("output/seqname.php", append = TRUE)
fastaFile2 <- readDNAStringSet(fasta2)
seq_name2 = names(fastaFile2)
seq_name2
sink()
sink("output/seqname.php", append = TRUE)
fastaFile2 <- readDNAStringSet(fasta2)
seq_name2 = names(fastaFile2)
seq_name2
sink()
# Load the output results
measurements <- "C:/MAMP/htdocs/IMS-Daredevil/Algorithms/output/output.php"
measurements
seqname <- "C:/MAMP/htdocs/IMS-Daredevil/Algorithms/output/seqname.php"
read.csv(seqname)
read.csv(seqname)[0]
read.csv(seqname)[1]
fileName <- "measurements"
conn <- file(fileName,open="r")
fileName <- measurements
conn <- file(fileName,open="r")
conn
linn <-readLines(conn)
linn
linn[1]
linn[0]
for (i in 1:length(linn)){
print(linn[i])
}
close(conn)
mm <- list()
for (i in 1:length(linn)){
print(linn[i])
mm <- append(i)
}
close(conn)
fileName <- measurements
conn <- file(fileName,open="r")
linn <-readLines(conn)
mm <- list()
for (i in 1:length(linn)){
print(linn[i])
mm <- append(i)
}
close(conn)
fileName <- measurements
conn <- file(fileName,open="r")
linn <-readLines(conn)
mm <- list()
for (i in 1:length(linn)){
print(linn[i])
mm <- append(mm, i)
}
close(conn)
mm
mm[1]
mm[2]
paste(mm[1])
fileName <- measurements
conn <- file(fileName,open="r")
linn <-readLines(conn)
mm <- list()
for (i in 1:length(linn)){
print(linn[i])
mm <- append(mm, i)
}
close(conn)
mm
fileName <- measurements
conn <- file(fileName,open="r")
linn <-readLines(conn)
mm <- list()
for (i in 1:length(linn)){
print(linn[i])
mm <- append(mm, i+1)
}
close(conn)
mm
conn <- file(fileName,open="r")
linn <-readLines(conn)
mm <- list()
for (i in 1:length(linn)){
print(linn[i])
test <- linn[i]
}
close(conn)
test
test[1]
test[0]
test[1,1]
test[1,0]
test[0]
test[1]
paste(test[1])
test
mm
test
trim(test)
result <- Genpofad(fasta1, fasta2)
result <- result[1]
result
result
paste(result)
cat(result)
cat(result)
sink("output/output.php", append = TRUE)
result <- Genpofad(fasta1, fasta2)
result <- result[1]
cat(result)
sink()
sink("output/seqname.php", append = TRUE)
fastaFile2 <- readDNAStringSet(fasta2)
seq_name2 = names(fastaFile2)
cat(seq_name2)
sink()
sink("output/output.php", append = TRUE)
result <- Genpofad(fasta1, fasta2)
result <- result[1]
cat(result)
sink()
sink("output/seqname.php", append = TRUE)
fastaFile2 <- readDNAStringSet(fasta2)
seq_name2 = names(fastaFile2)
cat(seq_name2)
sink()
sink("output/output.php", append = TRUE)
result <- Genpofad(fasta1, fasta2)
result <- result[1]*2
cat(result)
sink()
sink("output/seqname.php", append = TRUE)
fastaFile2 <- readDNAStringSet(fasta2)
seq_name2 = names(fastaFile2)
cat(seq_name2)
sink()
test
result
cat(result"\n")
cat(result"\n")
cat(seq_name2)
cat(result"\n")
sink("output/output.php", append = TRUE)
result <- Genpofad(fasta1, fasta2)
result <- result[1]
cat(result)
newline()
sink()
cat(result)
paste("\n")
sink()
sink("output/output.php", append = TRUE)
result <- Genpofad(fasta1, fasta2)
result <- result[1]
cat(result)
paste("\n")
sink()
message(result)
sink("output/output.php", append = TRUE)
result <- Genpofad(fasta1, fasta2)
result <- result[1]
message(result)
sink()
sink("output/output.php", append = TRUE)
result <- Genpofad(fasta1, fasta2)
result <- result[1]
message(result)
sink()
sink("output/output.php", append = TRUE)
result <- Genpofad(fasta1, fasta2)
result <- result[1]
cat(result)
sink()
sink("output/output.php", append = TRUE)
result <- Genpofad(fasta1, fasta2)
result <- result[1]
cat(result)
sink()
sink("output/output.php", append = TRUE)
result <- Genpofad(fasta1, fasta2)
result <- result[1]
cat(result)
paste("\n")
sink()
sink("output/output.php", append = TRUE)
result <- Genpofad(fasta1, fasta2)
result <- result[1]
cat(result)
paste("\n")
sink()
result
result <- Genpofad(fasta1, fasta2)
result <- result[1]
cat(result)
paste("\n")
sink()
sink("output/output.php", append = TRUE)
result <- Genpofad(fasta1, fasta2)
result <- result[1]
cat(result)
paste("\n")
sink()
result <- Genpofad(fasta1, fasta2)
result
cat(result)
sink("output/output.php", append = TRUE)
result <- Genpofad(fasta1, fasta2)
cat(result)
paste("\n")
sink()
sink("output/output.php", append = TRUE)
result <- Genpofad(fasta1, fasta2)
result
result
result <- Genpofad(fasta1, fasta2)
result
cat(result)
paste("\n")
sink()
Genpofad(fasta1, fasta2)
result <- Genpofad(fasta1, fasta2)
result
cat(result)
paste("\n")
sink("output/output.php", append = TRUE)
result <- Genpofad(fasta1, fasta2)
cat(result)
paste("\n")
sink()
sink("output/output.php", append = TRUE)
result <- Genpofad(fasta1, fasta2)
cat(result)
paste("\n")
sink()
sink("output/output.php", append = TRUE)
result <- Genpofad(fasta1, fasta2)
cat(result)
sink()
sink("output/output.php", append = TRUE)
result <- Genpofad(fasta1, fasta2)
cat(result)
sink()
sink("output/output.php", append = TRUE)
result <- Genpofad(fasta1, fasta2)
cat(result)
sink()
sink("output/output.php", append = TRUE)
cat("\n")
sink()
sink("output/output.php", append = TRUE)
result <- Genpofad(fasta1, fasta2)
cat(result)
sink()
sink("output/output.php", append = TRUE)
cat("\n")
sink()
sink("output/output.php", append = TRUE)
result <- Genpofad(fasta1, fasta2)
cat(result)
sink()
sink("output/output.php", append = TRUE)
cat("\n")
sink()
sink("output/output.php", append = TRUE)
result <- Genpofad(fasta1, fasta2)
cat(result)
sink()
sink("output/output.php", append = TRUE)
cat("\n")
sink()
sink("output/seqname.php", append = TRUE)
fastaFile2 <- readDNAStringSet(fasta2)
seq_name2 = names(fastaFile2)
cat(seq_name2)
sink()
sink("output/seqname.php", append = TRUE)
cat("\n")
sink()
sink("output/output.php", append = TRUE)
result <- Genpofad(fasta1, fasta2)
cat(result)
sink()
sink("output/output.php", append = TRUE)
cat("\n")
sink()
sink("output/seqname.php", append = TRUE)
fastaFile2 <- readDNAStringSet(fasta2)
seq_name2 = names(fastaFile2)
cat(seq_name2)
sink()
sink("output/seqname.php", append = TRUE)
cat("\n")
sink()
sink("output/output.php", append = TRUE)
result <- Genpofad(fasta1, fasta2)
cat(result)
sink()
sink("output/output.php", append = TRUE)
cat("\n")
sink()
sink("output/seqname.php", append = TRUE)
fastaFile2 <- readDNAStringSet(fasta2)
seq_name2 = names(fastaFile2)
cat(seq_name2)
sink()
sink("output/seqname.php", append = TRUE)
cat("\n")
sink()
# Load the output results
measurements <- "C:/MAMP/htdocs/IMS-Daredevil/Algorithms/output/output.php"
seqname <- "C:/MAMP/htdocs/IMS-Daredevil/Algorithms/output/seqname.php"
read.csv(measurements)
read.csv2(measurements)
read.csv2(measurements)[0]
read.csv2(measurements)[1]
read.delim(measurements)
fileName <- measurements
conn <- file(fileName,open="r")
linn <-readLines(conn)
for (i in 1:length(linn)){
print(linn[i])
}
close(conn)
fileName <- measurements
conn <- file(fileName,open="r")
linn <-readLines(conn)
mm <- list()
for (i in 1:length(linn)){
print(linn[i])
mm <- append(mm, i)
}
close(conn)
mm
mm[1]
fileName <- measurements
conn <- file(fileName,open="r")
linn <-readLines(conn)
mm <- list()
for (i in 1:length(linn)){
print(linn[i])
mm <- append(mm, linn[i])
}
close(conn)
mm
mm[1]
mm[2]
mm[3]
typeof(mm)
mm
vector()
test <- vector()
test
fileName <- measurements
conn <- file(fileName,open="r")
linn <-readLines(conn)
mm <- vector()
for (i in 1:length(linn)){
print(linn[i])
mm <- append(mm, linn[i])
}
close(conn)
mmÃ¤
mm
mm[0]
mm[1]
mm[2]
mm[3]
mm[4]
fileName <- measurements
conn <- file(fileName,open="r")
linn <-readLines(conn)
measurements <- vector()
for (i in 1:length(linn)){
print(linn[i])
measurements <- append(mm, linn[i])
}
close(conn)
fileName <- seqname
conn <- file(fileName,open="r")
linn <-readLines(conn)
seqname <- vector()
for (i in 1:length(linn)){
print(linn[i])
seqname <- append(mm, linn[i])
}
close(conn)
measurements
seqname
fileName <- measurements
conn <- file(fileName,open="r")
linn <-readLines(conn)
measurements <- vector()
for (i in 1:length(linn)){
print(linn[i])
measurements <- append(mm, linn[i])
}
close(conn)
fileName <- seqname
conn <- file(fileName,open="r")
linn <-readLines(conn)
seqname <- vector()
for (i in 1:length(linn)){
print(linn[i])
seqname <- append(seqname, linn[i])
}
close(conn)
fileName <- measurements
conn1 <- file(fileName,open="r")
linn <-readLines(conn)
measurements <- vector()
for (i in 1:length(linn)){
print(linn[i])
measurements <- append(mm, linn[i])
}
close(conn1)
fileName <- measurements
conn1 <- file(fileName,open="r")
linn <-readLines(conn1)
measurements <- vector()
for (i in 1:length(linn)){
print(linn[i])
measurements <- append(mm, linn[i])
}
close(conn1)
conn1 <- file(fileName,open="r")
fileName <- measurements
conn1 <- file(fileName,open="r")
# Load the output results
measurements <- "C:/MAMP/htdocs/IMS-Daredevil/Algorithms/output/output.php"
fileName <- measurements
conn <- file(fileName,open="r")
linn <-readLines(conn)
measurements <- vector()
for (i in 1:length(linn)){
print(linn[i])
measurements <- append(mm, linn[i])
}
close(conn)
